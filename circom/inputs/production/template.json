{
  "_comment": "Production input template for ThresholdProof circuit",
  "_description": "This template shows the required structure for circuit inputs. All values should be strings for compatibility with snarkjs.",
  "_constraints": {
    "tags": "Array of 10 integers representing tag IDs (0-255). Unused slots should be 0.",
    "targetTag": "String representation of the target tag ID to count (0-255)",
    "threshold": "String representation of minimum required count (0-10)"
  },
  "tags": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  "targetTag": "1",
  "threshold": "2",
  "attestationHashes": [
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_1",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_2",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_3",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_4",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_5",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_6",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_7",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_8",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_9",
    "REPLACE_WITH_ACTUAL_SHA256_HASH_OF_ATTESTATION_10",
    "ADD_MORE_HASHES_AS_NEEDED_UP_TO_50_TOTAL",
    "USE_EMPTY_HASH_IF_FEWER_THAN_50_ATTESTATIONS",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000"
  ],
  "tagIndices": [
    "REPLACE_WITH_TAG_FOR_ATTESTATION_1",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_2", 
    "REPLACE_WITH_TAG_FOR_ATTESTATION_3",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_4",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_5",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_6",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_7",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_8",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_9",
    "REPLACE_WITH_TAG_FOR_ATTESTATION_10",
    "CONTINUE_WITH_MORE_TAG_VALUES_UP_TO_50",
    "USE_0_FOR_UNUSED_POSITIONS",
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
  ],
  "walletSig": [
    "REPLACE_WITH_WALLET_SIGNATURE_R_COMPONENT",
    "REPLACE_WITH_WALLET_SIGNATURE_S_COMPONENT"
  ],
  "_instructions": {
    "usage": "Copy this template and replace placeholder values with real attestation data",
    "tag_encoding": {
      "defi": 0,
      "privacy": 1,
      "travel": 2,
      "gaming": 3,
      "technology": 4,
      "finance": 5
    },
    "constraints": {
      "maxAttestations": 50,
      "tagIndices_range": "0-255",
      "threshold_range": "1-50",
      "targetTag_range": "0-255",
      "attestationHashes_format": "64-character hex strings (SHA256)"
    }
  }
} 